<?php

declare(strict_types=1);

namespace Some\Name\Space;

use HttpClientBinder\Protocol\MagicProtocolFactory;
use JMS\Serializer\SerializerInterface;

class SomeProtocolInterfaceNameProxy implements SomeProtocolInterfaceName
{
    /**
     * @var HttpClientBinder\Protocol\MagicProtocol
     */
    private $protocol;

    public function __construct(SerializerInterface $serializer) {
        $this->protocol = (new MagicProtocolFactory($serializer))->build('{"key":"value"}');
    }

    public function implementedMethod(string $argOne, SomeObjectRequest $request): ReturnedType
    {
        return $this->protocol->implementedMethod($argOne, $request);
    }
}